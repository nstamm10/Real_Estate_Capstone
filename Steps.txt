1) Clone the project repository (SAVED BY RASK)

2) Explore the code base. (SAVED BY RASK)

3) Fill out ERC721 Mintable Contract in ERC721Mintable.sol (SAVED BY RASK)

4) Write test cases TestERC721Mintable.js (SAVED BY RASK)

5) Compile and pass test cases in TestERC721Mintable.js (SAVED BY RASK)

Implement Zokrates

6) Using Docker to install and instantiate a Zokrates zkSnarks development environment

7) Completes the Zokrates proof in square.code by adding the variable names in square.code

8) Compile program

9) Trusted setup

10) Compute witness

11) Generate Proof

12) Export Verifier.sol

Note: This project uses solidity version 0.5.2 so you will be required to update the code in Verifier.sol accordingly based on the compiler errors you receive

13) Write a test script to verify the solidity contract generated by Zokrates executed successfully - TestSquareVerifier.js

14) Write test contract for ZK and ERC721 integration - SolnSquareVerifier.sol

15) Compile and pass with TestSolnSquareVerifier.js

16) Deploy latest contracts generated by Zokrates (a.k.a verifier.sol)

17) Deploy SolnSquareVerifier contract to Rinkeby network

18) Mint 10 tokens

19) Generate OpenSea marketplace

Test and Verify OpenSea with your SolnSquareVerifier tokens

20) List 5 of your tokens on the marketplace

21) Purchase those 5 tokens using a different address

22) Complete required documentation and submit!
