1) Clone the project repository (SAVED BY RASK)

2) Explore the code base. (SAVED BY RASK)

3) Fill out ERC721 Mintable Contract in ERC721Mintable.sol (SAVED BY RASK)

4) Write test cases TestERC721Mintable.js

5) Compile and pass test cases in TestERC721Mintable.js

6) Implement Zokrates

7) Using Docker to install and instantiate a Zokrates zkSnarks development environment

8) Completes the Zokrates proof in square.code by adding the variable names in square.code

9) Compile program

10) Trusted setup

11) Compute witness

12) Generate Proof

13) Export Verifier.sol

14) Note: This project uses solidity version 0.5.2 so you will be required to update the code in Verifier.sol accordingly based on the compiler errors you receive

15) Write a test script to verify the solidity contract generated by Zokrates executed successfully - TestSquareVerifier.js

16) Write test contract for ZK and ERC721 integration - SolnSquareVerifier.sol

17) Compile and pass with TestSolnSquareVerifier.js

18) Deploy latest contracts generated by Zokrates (a.k.a verifier.sol)

19) Deploy SolnSquareVerifier contract to Rinkeby network

20) Mint 10 tokens

21) Generate OpenSea marketplace

22) Test and Verify OpenSea with your SolnSquareVerifier tokens

23) List 5 of your tokens on the marketplace

24) Purchase those 5 tokens using a different address

25) Complete required documentation and submit!
