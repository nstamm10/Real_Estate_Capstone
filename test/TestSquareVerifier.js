// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let Verifier = artifacts.require("Verifier");
const TruffleAssert = require('truffle-assertions');
const Web3 = require("../node_modules/web3-utils/src/index.js");
const proof_file = require("../zokrates/code/square/proof.json");

const proof_json = {
  "proof": {
    "a": [ Web3.toBN(proof_file.proof.a[0]).toString(), Web3.toBN(proof_file.proof.a[1]).toString() ],
    "b": [
        [ Web3.toBN(proof_file.proof.b[0][0]).toString(), Web3.toBN(proof_file.proof.b[0][1]).toString() ],
        [ Web3.toBN(proof_file.proof.b[1][0]).toString(), Web3.toBN(proof_file.proof.b[1][1]).toString() ]
    ],
    "c": [ Web3.toBN(proof_file.proof.c[0]).toString(), Web3.toBN(proof_file.proof.c[1]).toString() ]
    },
    "inputs": [ Web3.toBN(proof_file.inputs[0]).toString(), Web3.toBN(proof_file.inputs[1]).toString()]
}
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract("Verifier", accounts => {
    beforeEach(async function() {
        this.Verifier = await Verifier.new({from: accounts[0]});
    })

    it("Test verification with correct proof", async function () {
        let verify = await this.Verifier.verifyTx(
            proof_json.proof.a,
            proof_json.proof.b,
            proof_json.proof.c,
            proof_json.inputs,
            {from: accounts[0]}
        );

        assert.equal(verify, true, "Transaction did not verify with correct proof.");
    })

    it("Test verification with incorrect proof", async function () {
        let verify = await this.Verifier.verifyTx(
            proof_json.proof.a,
            proof_json.proof.b,
            proof_json.proof.c,
            [
              "0x0000000000000000000000000000000000000000000000000000000000000003",
              "0x0000000000000000000000000000000000000000000000000000000000000007"
            ],
            {from: accounts[0]}
        );

        assert.equal(verify, false, "Transaction did not verify with correct proof.");
    })
})

// Test verification with incorrect proof
